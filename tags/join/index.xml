<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>join on blog.p</title><link>https://pevenc12.github.io/tags/join/</link><description>Recent content in join on blog.p</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>© Peven</copyright><lastBuildDate>Sat, 12 Feb 2022 19:50:15 +0800</lastBuildDate><atom:link href="https://pevenc12.github.io/tags/join/index.xml" rel="self" type="application/rss+xml"/><item><title>PostgreSQL：淺入淺出 EXPLAIN（下）</title><link>https://pevenc12.github.io/posts/postgresql-explain-explained-join/</link><pubDate>Sat, 12 Feb 2022 19:50:15 +0800</pubDate><guid>https://pevenc12.github.io/posts/postgresql-explain-explained-join/</guid><description>前言 在一個 query 中如果會關聯到兩個以上的 relation（表），就需要進行 JOIN。在 PostgreSQL 中有三種 JOIN 行為（大多數的關聯式資料庫也分為這三種）：Nested Loop Join、Merge Join、Hash Join。
JOIN 先簡單加入一些資料當作起手式。假設在一個購物網站中，要關聯使用者資料與訂單資料。首先是使用者（user）資料：
u_id name phone 1 Peven 0912345678 2 Jack 0922345678 3 Ben 0932345678 再來是訂單（order）資料：
o_id amount payment_method customer_id 1 100 CASH 1 2 200 CREDIT_CARD 2 3 300 CASH 3 4 150 DEBIT_CARD 1 5 150 CREDIT_CARD 3 並且下 query：
SELECT * FROM user JOIN order ON user.u_id = order.customer_id; 以下提到的 left relation 與 right relation 是 query planner 在 runtime 決定的，不一定是指 user 或是 order。</description></item></channel></rss>