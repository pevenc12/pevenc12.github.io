<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>json on blog.p</title><link>https://pevenc12.github.io/tags/json/</link><description>Recent content in json on blog.p</description><generator>Hugo -- gohugo.io</generator><language>zh-tw</language><copyright>© Peven</copyright><lastBuildDate>Sun, 21 May 2023 22:45:12 +0800</lastBuildDate><atom:link href="https://pevenc12.github.io/tags/json/index.xml" rel="self" type="application/rss+xml"/><item><title>JSON：試著舒服地在關聯式資料庫中使用</title><link>https://pevenc12.github.io/posts/json-field-in-rdbms/</link><pubDate>Sun, 21 May 2023 22:45:12 +0800</pubDate><guid>https://pevenc12.github.io/posts/json-field-in-rdbms/</guid><description>前言 在網路服務中，client-side 與 server-side 常利用 JSON 格式溝通，好用而且易懂。但是在資料庫中，特別是關聯式資料庫（以下稱 RDB），JSON 格式就相當微妙，好用易懂似乎並不是優點，反而會變成缺點。這就是工程上常見的 trade-off。
本文會先整理一下 JSON Field 於 server-side 開發時要注意的事項，接著介紹如何使用比較容易避開雷點。文中的例子都是使用 Python 程式語言與 PostgreSQL 資料庫。
資料類型 以 PostgreSQL 為例，在 RFC7159 規範下，裡面能放的資料格式包含：
JSON primitive type PostgreSQL type string text number numeric boolean boolean null (none) 其中 SQL NULL 和 JSON null 是不一樣的概念，無法劃上等號。在程式實作中，存入資料時要注意存入的資料會變成什麼形狀。例如使用 Python 語言與 DjangoJSONEncoder 時，會把 datetime.date 轉為 YYYY-MM-DD 格式的 string、把 Decimal 轉為 string 等等。如果今天有不同的系統都會接上同一個資料庫，要特別小心各個系統對於資料的轉換可能會不同。
比較 工程上，優缺點這件事都是相對於需求而言的，以下會根據 JSON 或 JSON Field 的特點進行討論。
SCHEMA 彈性高 相較於 RDB 其他格式的欄位，JSON Field 明顯在 schema 上有很大的彈性，只要是 key-value pair 就可以塞進去 JSON Field。但這樣是好事還是壞事呢？</description></item></channel></rss>